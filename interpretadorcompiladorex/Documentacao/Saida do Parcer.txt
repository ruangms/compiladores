AST gerada pelo Parser:
[{'statements': [{'identifier': 'g', 'text': 'digite aqui', 'type': 'input'},
                 {'identifier': 'a',
                  'type': 'assignment',
                  'value': {'argument': {'type': 'value', 'value': '5'},
                            'function': 'fibonacci',
                            'type': 'function_call'}},
                 {'items': [{'type': 'identifier', 'value': 'a'}],
                  'type': 'print'},
                 {'items': [{'type': 'identifier', 'value': 'g'}],
                  'type': 'print'}],
  'type': 'SEQ'},
 {'statements': [{'items': [{'type': 'string', 'value': 'Hello, World!'}],
                  'type': 'print'},
                 {'identifier': 'a',
                  'type': 'assignment',
                  'value': {'left': '5',
                            'operator': '+',
                            'right': {'type': 'value', 'value': '3'},
                            'type': 'binary_op'}},
                 {'identifier': 'b',
                  'type': 'assignment',
                  'value': {'left': 'a',
                            'operator': '*',
                            'right': {'type': 'value', 'value': '2'},
                            'type': 'binary_op'}},
                 {'items': [{'type': 'identifier', 'value': 'b'}],
                  'type': 'print'},
                 {'operands': [{'type': 'value', 'value': 'a'},
                               {'type': 'value', 'value': 'b'}],
                  'type': 'send'},
                 {'operands': [{'type': 'value', 'value': 'x'},
                               {'type': 'value', 'value': 'y'}],
                  'type': 'receive'}],
  'type': 'SEQ'},
 {'statements': [{'operands': [{'type': 'identifier', 'value': 'a'},
                               {'type': 'identifier', 'value': 'b'},
                               {'type': 'identifier', 'value': 'c'}],
                  'type': 'c_channel_stmt'}],
  'type': 'SEQ'},
 {'statements': [{'items': [{'type': 'string', 'value': 'Hello, World!'}],
                  'type': 'print'},
                 {'identifier': 'a',
                  'type': 'assignment',
                  'value': {'left': '5',
                            'operator': '+',
                            'right': {'type': 'value', 'value': '3'},
                            'type': 'binary_op'}},
                 {'identifier': 'b',
                  'type': 'assignment',
                  'value': {'left': 'a',
                            'operator': '*',
                            'right': {'type': 'value', 'value': '2'},
                            'type': 'binary_op'}},
                 {'items': [{'type': 'identifier', 'value': 'b'}],
                  'type': 'print'},
                 {'operands': [{'type': 'value', 'value': 'a'},
                               {'type': 'value', 'value': 'b'}],
                  'type': 'send'},
                 {'operands': [{'type': 'value', 'value': 'x'},
                               {'type': 'value', 'value': 'y'}],
                  'type': 'receive'}],
  'type': 'SEQ'},
 {'statements': [{'condition': {'left': 'x',
                                'operator': '>',
                                'right': {'type': 'value', 'value': '10'},
                                'type': 'binary_op'},
                  'false_branch': [{'items': [{'type': 'string',
                                               'value': 'x is less than or '
                                                        'equal to 10'}],
                                    'type': 'print'}],
                  'true_branch': [{'items': [{'type': 'string',
                                              'value': 'x is greater than 10'}],
                                   'type': 'print'}],
                  'type': 'if'}],
  'type': 'SEQ'},
 {'statements': [{'body': [{'identifier': 'x',
                            'type': 'assignment',
                            'value': {'left': 'x',
                                      'operator': '+',
                                      'right': {'type': 'value', 'value': '1'},
                                      'type': 'binary_op'}}],
                  'condition': {'left': 'x',
                                'operator': '<',
                                'right': {'type': 'value', 'value': '10'},
                                'type': 'binary_op'},
                  'type': 'while'},
                 {'items': [{'type': 'identifier', 'value': 'x'}],
                  'type': 'print'}],
  'type': 'SEQ'},
 {'statements': [{'condition': {'left': 'x',
                                'operator': '>',
                                'right': {'left': '5',
                                          'operator': 'and',
                                          'right': {'left': 'y',
                                                    'operator': '<',
                                                    'right': {'type': 'value',
                                                              'value': '10'},
                                                    'type': 'binary_op'},
                                          'type': 'binary_op'},
                                'type': 'binary_op'},
                  'false_branch': [{'items': [{'type': 'string',
                                               'value': 'Condition is false'}],
                                    'type': 'print'}],
                  'true_branch': [{'items': [{'type': 'string',
                                              'value': 'Condition is true'}],
                                   'type': 'print'}],
                  'type': 'if'}],
  'type': 'SEQ'},
 {'statements': [{'identifier': 'g', 'text': 'digite aqui', 'type': 'input'},
                 {'identifier': 'a',
                  'type': 'assignment',
                  'value': {'argument': {'type': 'value', 'value': '5'},
                            'function': 'fibonacci',
                            'type': 'function_call'}},
                 {'items': [{'type': 'identifier', 'value': 'a'}],
                  'type': 'print'},
                 {'items': [{'type': 'identifier', 'value': 'g'}],
                  'type': 'print'}],
  'type': 'SEQ'},
 {'statements': [{'identifier': 'b',
                  'type': 'assignment',
                  'value': {'argument': {'type': 'value', 'value': '4'},
                            'function': 'factorial',
                            'type': 'function_call'}},
                 {'items': [{'type': 'identifier', 'value': 'b'}],
                  'type': 'print'}],
  'type': 'SEQ'},
 {'statements': [{'items': [{'type': 'string',
                             'value': 'This is parallel process 1'}],
                  'type': 'print'},
                 {'items': [{'type': 'string',
                             'value': 'This is parallel process 2'}],
                  'type': 'print'}],
  'type': 'PAR'},
 {'statements': [{'identifier': 'r_fatorial',
                  'type': 'assignment',
                  'value': {'argument': {'type': 'value', 'value': '7'},
                            'function': 'factorial',
                            'type': 'function_call'}},
                 {'items': [{'type': 'string', 'value': 'Fatorial de 7:'}],
                  'type': 'print'},
                 {'items': [{'type': 'identifier', 'value': 'r_fatorial'}],
                  'type': 'print'}],
  'type': 'SEQ'},
 {'statements': [{'identifier': 'r_fibonacci',
                  'type': 'assignment',
                  'value': {'argument': {'type': 'value', 'value': '10'},
                            'function': 'fibonacci',
                            'type': 'function_call'}},
                 {'items': [{'type': 'string',
                             'value': 'Termo 10 da S?rie de Fibonacci:'}],
                  'type': 'print'},
                 {'items': [{'type': 'identifier', 'value': 'r_fibonacci'}],
                  'type': 'print'}],
  'type': 'SEQ'}]
